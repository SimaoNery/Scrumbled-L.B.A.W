openapi: 3.0.0

info:
  version: '1.0'
  title: 'Scrumbled Web API'
  description: 'Web Resources Specification (A7) for Scrumbled'

servers:
- url: http://lbaw.fe.up.pt
  description: Production server

externalDocs:
  description: Find more info here.
  url: https://gitlab.up.pt/lbaw/lbaw2425/lbaw24113/-/wikis/home

tags:
  - name : 'M01 - Auth'
  - name : 'M02 - Profile'
  - name : 'M03 - Project'
  - name : 'M04 - Sprint'
  - name : 'M05 - Task'
  - name : 'M06 - Admin'

paths:
  /login:
    get:
      operationId: R101
      summary: 'R101: Login UI'
      description: 'Get the Login Page UI. Access: PUB'
      tags:
        - 'M01 - Auth'
      responses:
        '200':
          description: 'Ok. Show Login UI'
    post:
      operationId: R102
      summary: 'R102: Login Action'
      description: 'Processes the login form submission. Access: PUB'
      tags:
        - 'M01 - Auth'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '302':
          description: 'Redirect occurs after processing the login credentials.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Successful authentication. Redirect to user profile.'
                  value: '/users/{username}'
        '401':
              description: 'Failed authentication, incorrect password.'
        '404':
              description: 'Failed, user not found.'
  /register:
    get:
      operationId: R103
      summary: 'R103: Register UI'
      description: 'Get the Registration Page UI. Access: PUB'
      tags:
        - 'M01 - Auth'
      responses:
        '200':
          description: 'Ok. Show Register UI.'
    post:
      operationId: R104
      summary: 'R104: Register Action'
      description: 'Processes the Register Form submission. Access: PUB'
      tags:
        - 'M01 - Auth'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: string
                bio:
                  type: string
                fullname:
                  type: string
                email:
                  type: string
                password:
                  type: string
                picture:
                  type: string
                  format: binary
              required:
                - username
                - email
                - password
      responses:
        '302':
          description: 'Redirect occurs after processing the login credentials.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Account created successfully. Redirecting to projects.'
                  value: '/projects'
                302Error:
                  description: 'Failure while creating account.'
                  value: '/register'
  /logout:
    post:
      operationId: R105
      summary: 'R105: Logout Action'
      description: 'Logout the current authenticated used. Access: USR'
      tags:
        - 'M01 - Auth'
      responses:
        '302':
          description: 'Redirect after processing logout.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Successful logout. Redirect to Login UI.'
                  value: '/login'
                302Error:
                  description: 'Unsuccessful logout. Redirect to projects.'
                  value: '/projects'
        '403':
          description: 'Access denied.'
  /profiles/{username}:
    get:
      operationId: R201
      summary: 'R201: User Profile UI'
      description: 'Get the user profile. Access: PUB'
      tags:
        - 'M02 - Profile'
      responses:
        '200':
          description: 'Ok. Show user profile.'
        '404':
          description: 'User was not found.'
      parameters:
        - in: path
          name: username
          schema:
            type: string
          required: true
  /profiles/{username}/edit:
    get:
      operationId: R202
      summary: 'R202: Edit User Profile'
      description: 'Get page for user profile editing. Access: OWN'
      tags:
        - 'M02 - Profile'
      parameters:
        - in: path
          name : username
          schema:
            type: string
          required: true
      responses:
        '200':
          description: 'Ok. Show the page for editing the user profile.'
        '403':
          description: 'Access Denied.'
        '404':
          description: 'User was not found.'
    post:
      operationId: R203
      summary: 'R203: Edit User Profile Action'
      description: 'Processes the Edit User Profile Form submission. Access: OWN'
      tags:
        - 'M02 - Profile'
      parameters:
        - in: path
          name: username
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                id:
                  type: integer
                username:
                  type: string
                bio:
                  type: string
                fullname:
                  type: string
                email:
                  type: string
                password:
                  type: string
                picture:
                  type: string
              required:
                - id
      responses:
        '302':
          description: 'Redirect after user profile edit.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Profile has been edited successfully. Redirecting to profile'
                  value: '/profiles/{username}'
                302Error:
                  description: 'Failure while updating profile.'
                  value: '/profiles/{username}/edit'
        '403':
          description: Access Denied
        '404':
          description: 'User was not found.'
          
  /api/profiles/search:
    get:
      operationId: R204
      summary: 'R204: Search Profiles'
      description: 'Does an exact-match search on user profiles. Access: PUB.'
      tags:
        - 'M02 - Profile'
      parameters:
        - in: query
          name : username
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    username:
                      type: string
                    full_name:
                      type: string
                    email:
                      type: string
                    picture:
                      type: string
                  example:
                    - id: 1
                      username: "johndoe"
                      full_name: "John Doe"
                      email: "johndoe@example.com"
                      picture: "https://example.com/profiles/johndoe.jpg"
  /projects:
    get:
      operationId: R301
      summary: 'R301: Projects page'
      description: 'Returns all public projects, with optional filters for search. Access: PUB'
      tags:
        - 'M03 - Project'
      parameters:
        - in: query
          name: type
          description: Filter projects by type (Public, MyProjects, Favorites, Archive).
          schema:
            type: string
            default: Public
          required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    title:
                      type: string
                    slug:
                      type: string
                    description:
                      type: string
                    favorite:
                      type: boolean
                  example:
                    - title: Test Project
                      slug: test_project
                      description: "This is a test project for demonstration purposes."
                      favorite: false
        '302':
          description: Login Required.
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Redirecting to login.'
                  value: '/login'
  /projects/new:
    get:
      operationId: R302
      summary: 'R302: Project create UI'
      description: 'Get the Project creation form. Access: USR'
      tags:
        - 'M03 - Project'
      responses:
        '200':
          description: 'Ok. Show Project Create UI'
        '302':
          description: Login Required.
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Redirecting to login.'
                  value: '/login'
    post:
      operationId: R303
      summary: 'R303: Create a new project'
      description: 'Creates a new project with the specified details. Access: USR.'
      tags:
        - 'M03 - Project'
      requestBody:
        description: The details of the project to be created.
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                is_public:
                  type: boolean
                  default: false
                is_archived:
                  type: boolean
                  default: false
              required:
                - title
              example:
                title: "New Project X"
                description: "We would do things here"
                is_public: true
                is_archived: false
      responses:
        '302':
          description: 'Redirect after creating the new project'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Successfully created a new project. Redict to the new project.'
                  value: '/projects/{slug}'
                302Failure:
                  description: 'Error while creating the project. Redirect to projects page.'
                  value: '/projects'
        '403':
          description: Access Denied
  /projects/{slug}:
    get:
      operationId: R304
      summary: 'R304: View project page'
      description: 'Show the individual project page. Access: PUB.'
      tags:
        - 'M03 - Project'
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
      responses:
        '200':
          description: 'Success. Show Project Page UI'
        '403':
          description: Access Denied
        '404':
          description: 'Project was not found.'
  /projects/{slug}/add:
    get:
      operationId: R305
      summary: 'R305: Add user to Project UI'
      description: 'Get the Add user to Project form. Access: OWN'
      tags:
        - 'M03 - Project'
      responses:
        '200':
          description: 'Ok. Show Add User UI'
        '403':
          description: Access Denied
        '404':
          description: 'Project was not found.'
    post:
      operationId: R306
      summary: 'R306: Add User to Project'
      description: 'Adds a user to the project Access: USR.'
      tags:
        - 'M03 - Project'
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
      requestBody:
        description: The details of the user to add to the project.
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: string
                id:
                  type: integer
                email:
                  type: string
              oneOf:
                - required: [username]
                - required: [user_id]
                - required: [email]
      responses:
        '200':
          description: User successfully added to the project.
        '404':
          description: 'Project was not found.'
        '403':
          description: Access Denied.

  /projects/{slug}/backlog:
    get:
      operationId: R307
      summary: 'R307: View project backlog page'
      description: 'Show the individual project backlog. Access: PUB.'
      tags:
        - 'M03 - Project'
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
      responses:
        '200':
          description: 'Success. Show Project Backlog UI'
        '404':
          description: 'Project was not found.'
        '403':
          description: Access Denied

  /api/projects/{slug}/backlog/search:
    get:
      operationId: R308
      summary: 'R308: Search for task'
      description: 'Searches for tasks inside of the project backlog and returns the results as JSON. Access: PUB'
      tags:
        - 'M03 - Project'
      parameters:
        - in: path
          name: slug
          description: Project identifier
          schema:
            type: string
          required: true
        - in: query
          name: query
          description: String to use for full-text search
          schema:
            type: string
          required: false
        - in: query
          name: value
          description: Filter tasks by value
          schema:
            type: string
            enum: [must-have, should-have, could-have, will-not-have]
          required: false
        - in: query
          name: effort
          description: Filter tasks by effort
          schema:
            type: integer
            enum: [1, 2, 3, 5, 8, 13]
          required: false
      responses:
        '200':
          description: 'Ok. Search results returned'
        '403':
          description: Access Denied
        '404':
          description: 'Project was not found.'
  
  /projects/{slug}/sprints/new:
    get:
      operationId: R401
      summary: 'R401: Create a new Sprint'
      description: 'Get the Create Sprint form. Access: USR'
      tags:
        - 'M04 - Sprint'
      parameters:
        - in: path
          name: slug
          description: Project where I'm creating a sprint
          schema:
            type: string
          required: true
      responses:
        '200':
          description: 'Ok. Show Create Sprint UI'
        '302':
          description: Login Required.
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Redirecting to login.'
                  value: '/login'
        '403':
          description: Access Denied
        
    post:
      operationId: R402
      summary: 'R402: Create a new Sprint'
      description: 'Creates a new sprint with the specified details. Access: USR'
      tags:
        - 'M04 - Sprint'
      parameters:
        - in: path
          name: slug
          description: Project where I'm creating a sprint
          schema:
            type: string
          required: true
      requestBody:
        description: The details of the sprint to add to the project.
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  type: string
                start_date:
                  type: string
                  format: date
                end_date:
                  type: string
                  format: date
                is_open:
                  type: boolean
      responses:
        '200':
          description: Sprint created successfully.
        '404':
          description: Project not found.
        '403':
          description: Access Denied
        '302':
          description: Login Required.
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Redirecting to login.'
                  value: '/login'
                302Error:
                  description: 'Failure while creating a sprint.'
                  value: '/project/{slug}/backlog'
  
  /sprints/{id}/edit:
    get:
      operationId: R404
      summary: 'R404: Edit sprint UI'
      description: 'Get the Edit Sprint form. Access: USR'
      tags:
        - 'M04 - Sprint'
      responses:
        '200':
          description: 'Ok. Show Edit Sprint UI'
    post:
      operationId: R405
      summary: 'R405: Edit sprint details'
      description: 'Edits the details of a sprint.'
      tags:
        - 'M04 - Sprint'
      parameters:
        - in: path
          name: id
          description: Sprint identifier
          schema:
            type: integer
          required: true
      requestBody:
        required: true
        content:
          application/x-www-form-urlenconded:
            schema:
              type: object
              properties:
                name:
                  type: string
                start_date:
                  type: integer
                end_date:
                  type: integer
      responses:
        '200':
          description: 'Ok. Task details edited'
        '404':
          description: 'Task not found.'
        '403':
          description: 'Access denied.'
  /sprints/{id}/close:
    post:
      operationId: R406
      summary: 'R406 - Close a sprint'
      description: 'Mark the sprint as closed.'
      tags:
        - 'M04 - Sprint'
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Task successfully accepted.
        '403':
          description: Access denied.
        '404':
          description: Task not found. 
          
  /api/projects/{slug}/sprint:
    get:
      operationId: R308
      summary: 'R407: Get open sprint'
      description: 'Gets the open sprint of a project. Access: PUB'
      tags:
        - 'M04 - Sprint'
      responses:
        '200':
          description: 'Ok. Show open sprint.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  start_date:
                    type: string
                    format: date
                  end_date:
                    type: string
                    format: date
                  is_open:
                    type: boolean
                example:
                  id: 1
                  name: "Sprint 1"
                  start_date: "2021-05-01"
                  end_date: "2021-05-15"
                  is_open: true
        '403':
          description: Access Denied
        '404':
          description: 'Project was not found.'
        
  




  /projects/{slug}/tasks/new:
    get:
      operationId: R401
      summary: 'R401: Create task UI'
      description: 'Get the Create Task form. Access: USR'
      tags:
        - 'M05 - Task'
      parameters:
        - in: path
          name: slug
          description: Project where I'm creating a task
          schema:
            type: string
          required: true
      responses:
        '200':
          description: 'Ok. Show Create Task UI'
        '302':
          description: Login Required.
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Redirecting to login.'
                  value: '/login'
        '403':
          description: Access Denied
        
    post:
      operationId: R402
      summary: 'R402: Create a new Task'
      description: 'Creates a new task with the specified details. Access: USR'
      tags:
        - 'M05 - Task'
      parameters:
        - in: path
          name: slug
          description: Project where I'm creating a task
          schema:
            type: string
          required: true
      requestBody:
        description: The details of the user to add to the project.
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                value:
                  type: string
                  enum: ['must_have', 'should_have', 'could_have', 'will_not_have']
                effort:
                  type: integer
              required:
                - title
      responses:
        '200':
          description: Task created successfully.
        '404':
          description: Project not found.
        '403':
          description: Access Denied
        '302':
          description: Login Required.
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Redirecting to login.'
                  value: '/login'
                302Error:
                  description: 'Failure while creating a task.'
                  value: '/project/{slug}/backlog'
                  
  /tasks/{id}:
    get:
      operationId: R403
      summary: 'R403: View task details'
      description: 'Show the task details. Access: PUB'
      tags:
        - 'M05 - Task'
      parameters:
        - in: path
          name: id
          description: Task identifier
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: 'Ok. Show task details.'
        '403':
          description: 'Access Denied'
        '404':
          description: 'Task not found.'
          
  /tasks/{id}/edit:
    get:
      operationId: R404
      summary: 'R404: Edit task UI'
      description: 'Get the Edit Task form. Access: USR'
      tags:
        - 'M05 - Task'
      responses:
        '200':
          description: 'Ok. Show Edit Task UI'
    post:
      operationId: R405
      summary: 'R405: Edit task (in backlog) details'
      description: 'Edits the details of a task.'
      tags:
        - 'M05 - Task'
      parameters:
        - in: path
          name: task_id
          description: Task identifier
          schema:
            type: integer
          required: true
      requestBody:
        required: true
        content:
          application/x-www-form-urlenconded:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                assigned_to:
                  type: string
                value:
                  type: string
                  enum: [must-have, should-have, could-have, will-not-have]
                effort:
                  type: integer
                  enum: [1, 2, 3, 5, 8, 13]
                state:
                  type: string
                  enum: [backlog, sprint-backlog, in-progress, done, accepted]
              required:
                - title
                - state
      responses:
        '200':
          description: 'Ok. Task details edited'
        '404':
          description: 'Task not found.'
        '403':
          description: 'Access denied.'
  
  /tasks/{id}/assign:
    post:
      operationId: R406
      summary: 'R406 - Assign myself to a task'
      description: 'Assign myself to a task. Access: USR'
      tags:
        - 'M05 - Task'
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      requestBody:
        description: The task to be assigned.
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                id:
                  type: integer
              required:
                - id
      responses:
        '200':
          description: Successfully assigned to task.
        '403':
          description: Access denied.
        '404':
          description: Task not found.

  /tasks/{id}/start:
    post:
      operationId: R406
      summary: 'R406 - Start a task.'
      description: 'Start a task; make it be in progress.'
      tags:
        - 'M05 - Task'
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      requestBody:
      
        description: The task to be marked as in-progress.
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                id:
                  type: integer
              required:
                - id
      responses:
        '200':
          description: Task successfully started.
        '403':
          description: Access denied.
        '404':
          description: Task not found.

  /tasks/{id}/complete:
    post:
      operationId: R406
      summary: 'R406 - Complete a task'
      description: 'Complete a task and mark it as done. Access: '
      tags:
        - 'M05 - Task'
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      requestBody:
        description: The task to be marked as done.
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                id:
                  type: integer
              required:
                - id
      responses:
        '200':
          description: Task successfully marked as done.
        '403':
          description: Access denied.
        '404':
          description: Task not found.

  /tasks/{id}/accept:
    post:
      operationId: R406
      summary: 'R406 - Accept a task'
      description: 'Mark the task as accepted.'
      tags:
        - 'M05 - Task'
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      requestBody:
        description: The task to be marked as accepted.
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                id:
                  type: integer
              required:
                - id
      responses:
        '200':
          description: Task successfully accepted.
        '403':
          description: Access denied.
        '404':
          description: Task not found. 
  /admin/users:
    get:
      operationId: R501
      summary: 'R501: Search user accounts'
      description: 'Retrieve list of user accounts with filtering.'
      tags:
        - 'M06 - Admin'
      parameters:
        - in: query
          name: query
          description: 'String to search for user accounts'
          schema:
            type: string
          required: false
        - in: query
          name: status
          description: 'Filter user accounts by status'
          schema:
            type: string
            enum: [needs-confirmation, banned, active]
          required: false
      responses:
        '200':
          description: 'Ok. List of user accounts returned.'
          content:
            application/x-www-form-urlencoded:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    username:
                      type: string
                    full_name:
                      type: string
                    picture:
                      type: string
                    email:
                      type: string
                    status:
                      type: string
        '400':
          description: 'User account not found.'
  /admin/users/{username}/edit:
    get:
      operationId: R502
      summary: 'R502: View user account details for editing'
      description: 'Gets the deetails of the user account to be edited.'
      tags:
        - 'M06 - Admin'
      parameters:
        - in: path
          name: username
          description: 'Username of the account to view'
          schema:
            type: string
          required: true
      responses:
        '200':
          description: 'Ok. User account details returned'
          content:
            application/x-www-form-urlencoded:
              schema:
                type: object
                properties:
                  username:
                    type: string
                  full_name:
                    type: string
                  picture:
                    type: string
                  bio:
                    type: string
                  email:
                    type: string
                  status:
                    type: string
        '400':
          description: 'User account not found.'
    post:
      operationId: R503
      summary: 'R503 - Edit user account'
      description: 'Edits a user account.'
      tags:
        - 'M06 - Admin'
      parameters:
        - in: path
          name: username
          description: 'Username of the account to edit.'
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: 'Edited username for the user account.'
                full-name:
                  type: string
                  description: 'Edited full name for the user account.'
                bio:
                  type: string
                  description: 'Edited bio for the user account.'
                picture:
                  type: string
                  description: 'Edited picture path for the user account.'
                email:
                  type: string
                  format: email
                  description: 'Edited email address for the user account.'
                password:
                  type: string
                  format: password
                  description: 'Edited password for the user account.'
                status:
                  type: string
                  enum: [needs-confirmation, banned, active]
                  description: 'Edited status for the user account.'
      responses:
        '200':
          description: 'Ok. User account edited'
        '400':
          description: 'User account not found or Editing invalid.'
